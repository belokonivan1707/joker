{"ast":null,"code":"import db from '../json/mime-db.json';\n// console.log('db', db)\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/;\n\n// exports.extensions = Object.create(null)\n\nexport function extension(type) {\n  if (!type || typeof type !== 'string') {\n    return false;\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type);\n  console.log('match', match);\n  // get extensions\n  // var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  // if (!exts || !exts.length) {\n  //   return false\n  // }\n\n  // return exts[0]\n}\n\nfunction populateMaps(extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana'];\n  Object.keys(db).forEach(function forEachMimeType(type) {\n    var mime = db[type];\n    var exts = mime.extensions;\n    if (!exts || !exts.length) {\n      return;\n    }\n\n    // mime -> extensions\n    extensions[type] = exts;\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i];\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source);\n        var to = preference.indexOf(mime.source);\n        if (types[extension] !== 'application/octet-stream' && (from > to || from === to && types[extension].substr(0, 12) === 'application/')) {\n          // skip the remapping\n          continue;\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type;\n    }\n  });\n}","map":{"version":3,"names":["db","EXTRACT_TYPE_REGEXP","extension","type","match","exec","console","log","populateMaps","extensions","types","preference","undefined","Object","keys","forEach","forEachMimeType","mime","exts","length","i","from","indexOf","source","to","substr"],"sources":["/Users/user/develop/study/idontknow/src/common/helpers/mime-types.helpers.js"],"sourcesContent":["import db from '../json/mime-db.json'\n// console.log('db', db)\n\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\n\n// exports.extensions = Object.create(null)\n\nexport function extension(type) {\n    if (!type || typeof type !== 'string') {\n        return false\n    }\n\n    // TODO: use media-typer\n    var match = EXTRACT_TYPE_REGEXP.exec(type)\n    console.log('match', match);\n    // get extensions\n    // var exts = match && exports.extensions[match[1].toLowerCase()]\n\n    // if (!exts || !exts.length) {\n    //   return false\n    // }\n\n    // return exts[0]\n}\n\nfunction populateMaps (extensions, types) {\n    // source preference (least -> most)\n    var preference = ['nginx', 'apache', undefined, 'iana']\n  \n    Object.keys(db).forEach(function forEachMimeType (type) {\n      var mime = db[type]\n      var exts = mime.extensions\n  \n      if (!exts || !exts.length) {\n        return\n      }\n  \n      // mime -> extensions\n      extensions[type] = exts\n  \n      // extension -> mime\n      for (var i = 0; i < exts.length; i++) {\n        var extension = exts[i]\n  \n        if (types[extension]) {\n          var from = preference.indexOf(db[types[extension]].source)\n          var to = preference.indexOf(mime.source)\n  \n          if (types[extension] !== 'application/octet-stream' &&\n            (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n            // skip the remapping\n            continue\n          }\n        }\n  \n        // set the extension -> mime\n        types[extension] = type\n      }\n    })\n  }"],"mappings":"AAAA,OAAOA,EAAE,MAAM,sBAAsB;AACrC;;AAGA,IAAIC,mBAAmB,GAAG,yBAAyB;;AAEnD;;AAEA,OAAO,SAASC,SAAS,CAACC,IAAI,EAAE;EAC5B,IAAI,CAACA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IACnC,OAAO,KAAK;EAChB;;EAEA;EACA,IAAIC,KAAK,GAAGH,mBAAmB,CAACI,IAAI,CAACF,IAAI,CAAC;EAC1CG,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,KAAK,CAAC;EAC3B;EACA;;EAEA;EACA;EACA;;EAEA;AACJ;;AAEA,SAASI,YAAY,CAAEC,UAAU,EAAEC,KAAK,EAAE;EACtC;EACA,IAAIC,UAAU,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAEC,SAAS,EAAE,MAAM,CAAC;EAEvDC,MAAM,CAACC,IAAI,CAACd,EAAE,CAAC,CAACe,OAAO,CAAC,SAASC,eAAe,CAAEb,IAAI,EAAE;IACtD,IAAIc,IAAI,GAAGjB,EAAE,CAACG,IAAI,CAAC;IACnB,IAAIe,IAAI,GAAGD,IAAI,CAACR,UAAU;IAE1B,IAAI,CAACS,IAAI,IAAI,CAACA,IAAI,CAACC,MAAM,EAAE;MACzB;IACF;;IAEA;IACAV,UAAU,CAACN,IAAI,CAAC,GAAGe,IAAI;;IAEvB;IACA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACC,MAAM,EAAEC,CAAC,EAAE,EAAE;MACpC,IAAIlB,SAAS,GAAGgB,IAAI,CAACE,CAAC,CAAC;MAEvB,IAAIV,KAAK,CAACR,SAAS,CAAC,EAAE;QACpB,IAAImB,IAAI,GAAGV,UAAU,CAACW,OAAO,CAACtB,EAAE,CAACU,KAAK,CAACR,SAAS,CAAC,CAAC,CAACqB,MAAM,CAAC;QAC1D,IAAIC,EAAE,GAAGb,UAAU,CAACW,OAAO,CAACL,IAAI,CAACM,MAAM,CAAC;QAExC,IAAIb,KAAK,CAACR,SAAS,CAAC,KAAK,0BAA0B,KAChDmB,IAAI,GAAGG,EAAE,IAAKH,IAAI,KAAKG,EAAE,IAAId,KAAK,CAACR,SAAS,CAAC,CAACuB,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,cAAe,CAAC,EAAE;UACnF;UACA;QACF;MACF;;MAEA;MACAf,KAAK,CAACR,SAAS,CAAC,GAAGC,IAAI;IACzB;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module"}