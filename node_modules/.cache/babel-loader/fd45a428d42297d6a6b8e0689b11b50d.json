{"ast":null,"code":"import _slicedToArray from \"/Users/user/develop/study/idontknow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/user/develop/study/idontknow/client/src/views/income/income.tsx\";\nimport React from 'react';\nimport './income.css';\nexport function Income() {\n  var _React$useState = React.useState('I hate fuck animal.'),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    state = _React$useState2[0],\n    setState = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    count = _React$useState4[0],\n    setCount = _React$useState4[1];\n  function startCount() {\n    setInterval(function () {\n      setCount(function (prev) {\n        return prev + 1;\n      });\n    }, 1000);\n  }\n  function handleClick() {\n    if (state === 'I hate fuck animal.') {\n      setState('I love fuck animals');\n    }\n    if (state === 'I love fuck animals') {\n      setState('I hate fuck animal.');\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, state), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      background: 'deeppink'\n    },\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"The count of animals that I fucked = \", count), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Everything is shit! But not today.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"For Kizlux from Kozloder\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Click on this button to change your opinion!\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: startCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Click on this button, for staring FUCK animals!\"))));\n}\n\n// create new category\n\n// add expense to existing category \n\n// default categories\n\n// fetch('http://localhost:8000/test', {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json;charset=utf-8'\n//     },\n//     body: JSON.stringify({hello: 'die'})\n\n// })\n// .then((response) => response.json())\n// .then((result) => console.log('result', result))\n// .catch((error) => console.log('error', error));","map":{"version":3,"names":["React","Income","useState","state","setState","count","setCount","startCount","setInterval","prev","handleClick","background"],"sources":["/Users/user/develop/study/idontknow/client/src/views/income/income.tsx"],"sourcesContent":["import React from 'react';\nimport './income.css'\n\nexport function Income (){\n    const [state, setState] = React.useState('I hate fuck animal.')\n    const [count, setCount] =  React.useState(0)\n\n\n    function startCount() {\n        setInterval(() => {\n            setCount(prev => prev + 1)\n        }, 1000)\n    }\n\n    function handleClick() {\n        if(state === 'I hate fuck animal.') {\n            setState('I love fuck animals')\n        }\n\n        if(state === 'I love fuck animals') {\n            setState('I hate fuck animal.')\n        }\n    }\n\n    return (\n        <div className='wrapper'>\n            <div className='container'>\n                <h1 className='title'>\n                    {state}\n                </h1>\n                <h2 style={{background: 'deeppink'}} className='subtitle'>\n                    The count of animals that I fucked = {count}\n                </h2>\n                <h3 className='subtitle'>\n                    Everything is shit! But not today.\n                </h3>\n\n                <div className='box'>\n                    <p className='description'>\n                        For Kizlux from Kozloder\n                    </p>\n                    <button className='button' onClick={handleClick}>\n                        Click on this button to change your opinion!\n                    </button>\n                    <button className='button' onClick={startCount}>\n                         Click on this button, for staring FUCK animals!\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// create new category\n\n// add expense to existing category \n\n// default categories\n\n\n// fetch('http://localhost:8000/test', {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json;charset=utf-8'\n//     },\n//     body: JSON.stringify({hello: 'die'})\n  \n// })\n// .then((response) => response.json())\n// .then((result) => console.log('result', result))\n// .catch((error) => console.log('error', error));"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAErB,OAAO,SAASC,MAAM,GAAG;EAAA,sBACKD,KAAK,CAACE,QAAQ,CAAC,qBAAqB,CAAC;IAAA;IAAxDC,KAAK;IAAEC,QAAQ;EAAA,uBACKJ,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC;IAAA;IAArCG,KAAK;IAAEC,QAAQ;EAGtB,SAASC,UAAU,GAAG;IAClBC,WAAW,CAAC,YAAM;MACdF,QAAQ,CAAC,UAAAG,IAAI;QAAA,OAAIA,IAAI,GAAG,CAAC;MAAA,EAAC;IAC9B,CAAC,EAAE,IAAI,CAAC;EACZ;EAEA,SAASC,WAAW,GAAG;IACnB,IAAGP,KAAK,KAAK,qBAAqB,EAAE;MAChCC,QAAQ,CAAC,qBAAqB,CAAC;IACnC;IAEA,IAAGD,KAAK,KAAK,qBAAqB,EAAE;MAChCC,QAAQ,CAAC,qBAAqB,CAAC;IACnC;EACJ;EAEA,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACpB;IAAK,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACtB;IAAI,SAAS,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAChBD,KAAK,CACL,eACL;IAAI,KAAK,EAAE;MAACQ,UAAU,EAAE;IAAU,CAAE;IAAC,SAAS,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4CACfN,KAAK,CAC1C,eACL;IAAI,SAAS,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wCAEnB,eAEL;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAChB;IAAG,SAAS,EAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAEtB,eACJ;IAAQ,SAAS,EAAC,QAAQ;IAAC,OAAO,EAAEK,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kDAEvC,eACT;IAAQ,SAAS,EAAC,QAAQ;IAAC,OAAO,EAAEH,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,qDAEtC,CACP,CACJ,CACJ;AAEd;;AAgBA;;AAEA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}