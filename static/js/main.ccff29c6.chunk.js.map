{"version":3,"sources":["views/income/income.tsx","views/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Income","_React$useState","React","useState","_React$useState2","Object","slicedToArray","state","setState","_React$useState3","_React$useState4","count","setCount","react_default","a","createElement","className","style","background","onClick","setInterval","prev","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","views_App"],"mappings":"mMAGO,SAASA,IAAS,IAAAC,EACKC,IAAMC,SAAS,uBAAsBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAAxDM,EAAKH,EAAA,GAAEI,EAAQJ,EAAA,GAAAK,EACKP,IAAMC,SAAS,GAAEO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAArCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAmBtB,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACTT,GAELM,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACC,WAAsB,IAAVP,EAAc,eAAiB,QAASK,UAAU,YAAU,wCAC1CL,GAE1CE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAU,sCAIxBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAa,4BAG1BH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASG,QA3B3C,WACiB,wBAAVZ,GACCC,EAAS,uBAGA,wBAAVD,GACCC,EAAS,yBAqB+C,gDAGhDK,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASG,QApC3C,WACIC,YAAY,WACRR,EAAS,SAAAS,GAAI,OAAIA,EAAO,KACzB,OAiCwD,oDAKnDR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wBAEIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAU,oCCrClD,IAQeM,EARH,WACV,OACET,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACf,EAAM,QCJEuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCHDY,IAASC,WACpBC,SAASC,eAAe,SAGrBC,OACH3B,EAAAC,EAAAC,cAACF,EAAAC,EAAM2B,WAAU,KACf5B,EAAAC,EAAAC,cAAC2B,EAAG,QAORnB","file":"static/js/main.ccff29c6.chunk.js","sourcesContent":["import React from 'react';\nimport './income.css'\n\nexport function Income (){\n    const [state, setState] = React.useState('I hate fuck animal.')\n    const [count, setCount] =  React.useState(0)\n\n\n    function startCount() {\n        setInterval(() => {\n            setCount(prev => prev + 1)\n        }, 1000)\n    }\n\n    function handleClick() {\n        if(state === 'I hate fuck animal.') {\n            setState('I love fuck animals')\n        }\n\n        if(state === 'I love fuck animals') {\n            setState('I hate fuck animal.')\n        }\n    }\n\n    return (\n        <div className='wrapper'>\n            <div className='container'>\n                <h1 className='title'>\n                    {state}\n                </h1>\n                <h2 style={{background: count !== 0 ? 'antiquewhite' : 'none'}} className='subtitle'>\n                    The count of animals that I fucked = {count}\n                </h2>\n                <h3 className='subtitle'>\n                    Everything is shit! But not today.\n                </h3>\n\n                <div className='box'>\n                    <p className='description'>\n                        For Kizlux from Kozloder\n                    </p>\n                    <button className='button' onClick={handleClick}>\n                        Click on this button to change your opinion!\n                    </button>\n                    <button className='button' onClick={startCount}>\n                         Click on this button, for staring FUCK animals!\n                    </button>\n                </div>\n\n                <div>\n                    <b>\n                        Developed by \n                        <span className='campaign'>\n                        Â©Kozlodernya corporation.\n                        </span>\n                    </b>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// create new category\n\n// add expense to existing category \n\n// default categories\n\n\n// fetch('http://localhost:8000/test', {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json;charset=utf-8'\n//     },\n//     body: JSON.stringify({hello: 'die'})\n  \n// })\n// .then((response) => response.json())\n// .then((result) => console.log('result', result))\n// .catch((error) => console.log('error', error));","import React from \"react\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Link,\n  useNavigate,\n  useLocation,\n  Navigate,\n  Outlet,\n} from \"react-router-dom\";\nimport { AppBar } from \"../ui/components/app-bar/app-bar\";\nimport { APP_ROUTES, IAppRoutes } from \"../common/routes/app-routes\";\nimport { Income } from \"./income/income\";\n\nconst App = () => {\n  return (\n    <div>\n      <Income />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './views/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}