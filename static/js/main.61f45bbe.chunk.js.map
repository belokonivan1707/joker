{"version":3,"sources":["ui/components/banner/banner.tsx","views/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Banner","_ref","words","_ref$repeatTime","repeatTime","_ref$wordTime","wordTime","time","_React$useState","React","useState","_React$useState2","Object","slicedToArray","test","_React$useState3","_React$useState4","text","setText","typeWriter","useCallback","i","fnCallback","length","console","log","substring","setTimeout","startTextAnimation","array","undefined","useEffect","react_default","a","createElement","className","App","style","padding","banner_banner","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","views_App"],"mappings":"6LA6DeA,SAnDkB,SAAHC,GAAgE,IAA1DC,EAAKD,EAALC,MAAKC,EAAAF,EAAEG,kBAAU,IAAAD,EAAG,IAASA,EAAAE,EAAAJ,EAAEK,gBAAQ,IAAAD,EAAG,IAAGA,EAAEE,EAAIN,EAAJM,KAAIC,EAC3DC,IAAMC,SAAc,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAAxCM,EAAIH,EAAA,GAASI,GAAAJ,EAAA,GACIF,IAAMC,SAAS,KAAGM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAAnCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAEdG,EAAaV,IAAMW,YACrB,SAACH,EAAcI,EAAWC,GAClBD,EAAIJ,EAAKM,QACTC,QAAQC,IAAIR,EAAKS,UAAU,EAAGL,EAAI,IAClCH,EAAQD,EAAKS,UAAU,EAAGL,EAAI,IAE9BM,WAAW,WACPR,EAAWF,EAAMI,EAAI,EAAGC,IACzB,MAC0B,oBAAfA,GACdK,WAAWL,EAAYhB,IAG/B,CAACA,IAGCsB,EAAqBnB,IAAMW,YAC7B,SAACC,EAAWQ,QACSC,IAAbD,EAAMR,IAONA,EAAIQ,EAAMR,GAAGE,QACbJ,EAAWU,EAAMR,GAAI,EAAG,WACpBO,EAAmBP,EAAI,EAAGQ,MAItC,CAACV,EAAYf,IASjB,OANAK,IAAMsB,UAAU,WACZJ,WAAW,WACPC,EAAmB,EAAG1B,IACvBK,IACJ,CAACqB,EAAoB1B,IAGpB8B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACXrB,EAAMG,EAAKe,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBC7BzBC,EAXH,WACV,OACEJ,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAACC,QAAS,SACpBN,EAAAC,EAAAC,cAACK,EAAM,CAACrC,MAAO,CAAC,qEAChB8B,EAAAC,EAAAC,cAACK,EAAM,CAACrC,MAAO,CAAC,sNAA6CK,KAAM,OACnEyB,EAAAC,EAAAC,cAACK,EAAM,CAACrC,MAAO,CAAC,oMAA0CK,KAAM,MAChEyB,EAAAC,EAAAC,cAACK,EAAM,CAACrC,MAAO,CAAC,8GAA0BK,KAAM,SCRvCiC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAA5C,GAAiD,IAA9C8C,EAAM9C,EAAN8C,OAAQC,EAAM/C,EAAN+C,OAAQC,EAAMhD,EAANgD,OAAQC,EAAMjD,EAANiD,OAAQC,EAAOlD,EAAPkD,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCHDW,IAASC,WACpBC,SAASC,eAAe,SAGrBC,OACHxB,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,WAAU,KACfzB,EAAAC,EAAAC,cAACwB,EAAG,QAORlB","file":"static/js/main.61f45bbe.chunk.js","sourcesContent":["import React from 'react';\nimport './banner.css';\n\ninterface IProps {\n    words: string[];\n    repeatTime?: number;\n    wordTime?: number;\n    time?: number\n}\n\nconst Banner: React.FC<IProps> = ({ words, repeatTime = 100000000, wordTime = 700, time }) => {\n    const [test, setTest] = React.useState<any>('')\n    const [text, setText] = React.useState('');\n\n    const typeWriter = React.useCallback(\n        (text: string, i: number, fnCallback: () => void) => {\n            if (i < text.length) {\n                console.log(text.substring(0, i + 1))\n                setText(text.substring(0, i + 1));\n                \n                setTimeout(function () {\n                    typeWriter(text, i + 1, fnCallback);\n                }, 100);\n            } else if (typeof fnCallback === 'function') {\n                setTimeout(fnCallback, wordTime);                \n            }\n        },\n        [wordTime]\n    );\n\n    const startTextAnimation = React.useCallback(\n        (i: number, array: string[]) => {\n            if (array[i] === undefined) {\n                // setTimeout(() => {\n                //     startTextAnimation(0, array);\n                // }, repeatTime);\n                return;\n            }\n\n            if (i < array[i].length) {\n                typeWriter(array[i], 0, () => {\n                    startTextAnimation(i + 1, array);\n                });\n            }\n        },\n        [typeWriter, repeatTime]\n    );\n\n    React.useEffect(() => {\n        setTimeout(() => {\n            startTextAnimation(0, words);\n        }, time)\n    }, [startTextAnimation, words]);\n\n    return (\n        <code className='banner-text'>\n            {test}{text}<span className='banner-cursor'/>\n        </code>\n    );\n}\n\nexport default Banner;\n","import React, { useEffect } from \"react\";\nimport { \n  BrowserRouter,\n  Routes,\n  Route,\n  Link,\n  useNavigate,\n  useLocation,\n  Navigate,\n  Outlet,\n} from \"react-router-dom\";\nimport { AppBar } from \"../ui/components/app-bar/app-bar\";\nimport { APP_ROUTES, IAppRoutes } from \"../common/routes/app-routes\";\nimport { Income } from \"./income/income\";\nimport Banner from \"../ui/components/banner/banner\";\n\nconst App = () => {\n  return (\n    <div style={{padding: '10px'}}>\n      <Banner words={['Привет, Олег!']}/>\n      <Banner words={['Надеюсь ты в отличном расположении духа!']} time={2500}/>\n      <Banner words={['И скоро перейдешь к следующему этапу!']} time={8000}/>\n      <Banner words={['Обнял и не приподнял!']} time={12000}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './views/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}